import '../../domain/entity/user.dart';

class UserModel extends UserEntity {
  UserModel({
    required int id,
    required String firstName,
    required String lastName,
    required String maidenName,
    required int age,
    required String gender,
    required String email,
    required String phone,
    required String username,
    required String birthDate,
    required String image,
    required String bloodGroup,
    required double height,
    required double weight,
    required String eyeColor,
    required Hair hair,
    required String ip,
    required Address address,
    required String macAddress,
    required String university,
    required Bank bank,
    required Company company,
    required String ein,
    required String ssn,
    required String userAgent,
    required Crypto crypto,
    required String role,
  }) : super(
          id: id,
          firstName: firstName,
          lastName: lastName,
          maidenName: maidenName,
          age: age,
          gender: gender,
          email: email,
          phone: phone,
          username: username,
          birthDate: birthDate,
          image: image,
          bloodGroup: bloodGroup,
          height: height,
          weight: weight,
          eyeColor: eyeColor,
          hair: hair,
          ip: ip,
          address: address,
          macAddress: macAddress,
          university: university,
          bank: bank,
          company: company,
          ein: ein,
          ssn: ssn,
          userAgent: userAgent,
          crypto: crypto,
          role: role,
        );

  factory UserModel.fromJson(Map<String, dynamic> json) {
    return UserModel(
      id: json['id'],
      firstName: json['firstName'],
      lastName: json['lastName'],
      maidenName: json['maidenName'],
      age: json['age'],
      gender: json['gender'],
      email: json['email'],
      phone: json['phone'],
      username: json['username'],
      birthDate: json['birthDate'],
      image: json['image'],
      bloodGroup: json['bloodGroup'],
      height: json['height'].toDouble(),
      weight: json['weight'].toDouble(),
      eyeColor: json['eyeColor'],
      hair: Hair(
        color: json['hair']['color'],
        type: json['hair']['type'],
      ),
      ip: json['ip'],
      address: Address(
        address: json['address']['address'],
        city: json['address']['city'],
        state: json['address']['state'],
        stateCode: json['address']['stateCode'],
        postalCode: json['address']['postalCode'],
        coordinates: Coordinates(
          lat: json['address']['coordinates']['lat'].toDouble(),
          lng: json['address']['coordinates']['lng'].toDouble(),
        ),
        country: json['address']['country'],
      ),
      macAddress: json['macAddress'],
      university: json['university'],
      bank: Bank(
        cardExpire: json['bank']['cardExpire'],
        cardNumber: json['bank']['cardNumber'],
        cardType: json['bank']['cardType'],
        currency: json['bank']['currency'],
        iban: json['bank']['iban'],
      ),
      company: Company(
        department: json['company']['department'],
        name: json['company']['name'],
        title: json['company']['title'],
        address: Address(
          address: json['company']['address']['address'],
          city: json['company']['address']['city'],
          state: json['company']['address']['state'],
          stateCode: json['company']['address']['stateCode'],
          postalCode: json['company']['address']['postalCode'],
          coordinates: Coordinates(
            lat: json['company']['address']['coordinates']['lat'].toDouble(),
            lng: json['company']['address']['coordinates']['lng'].toDouble(),
          ),
          country: json['company']['address']['country'],
        ),
      ),
      ein: json['ein'],
      ssn: json['ssn'],
      userAgent: json['userAgent'],
      crypto: Crypto(
        coin: json['crypto']['coin'],
        wallet: json['crypto']['wallet'],
        network: json['crypto']['network'],
      ),
      role: json['role'],
    );
  }

  Map<String, dynamic> toJson() => {
        'id': id,
        'firstName': firstName,
        'lastName': lastName,
        'maidenName': maidenName,
        'age': age,
        'gender': gender,
        'email': email,
        'phone': phone,
        'username': username,
        'birthDate': birthDate,
        'image': image,
        'bloodGroup': bloodGroup,
        'height': height,
        'weight': weight,
        'eyeColor': eyeColor,
        'hair': {
          'color': hair.color,
          'type': hair.type,
        },
        'ip': ip,
        'address': {
          'address': address.address,
          'city': address.city,
          'state': address.state,
          'stateCode': address.stateCode,
          'postalCode': address.postalCode,
          'coordinates': {
            'lat': address.coordinates.lat,
            'lng': address.coordinates.lng,
          },
          'country': address.country,
        },
        'macAddress': macAddress,
        'university': university,
        'bank': {
          'cardExpire': bank.cardExpire,
          'cardNumber': bank.cardNumber,
          'cardType': bank.cardType,
          'currency': bank.currency,
          'iban': bank.iban,
        },
        'company': {
          'department': company.department,
          'name': company.name,
          'title': company.title,
          'address': {
            'address': company.address.address,
            'city': company.address.city,
            'state': company.address.state,
            'stateCode': company.address.stateCode,
            'postalCode': company.address.postalCode,
            'coordinates': {
              'lat': company.address.coordinates.lat,
              'lng': company.address.coordinates.lng,
            },
            'country': company.address.country,
          },
        },
        'ein': ein,
        'ssn': ssn,
        'userAgent': userAgent,
        'crypto': {
          'coin': crypto.coin,
          'wallet': crypto.wallet,
          'network': crypto.network,
        },
        'role': role,
      };
}
